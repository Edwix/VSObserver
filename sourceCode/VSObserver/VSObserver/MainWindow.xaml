<Window x:Class="VSObserver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:nspace="clr-namespace:VSObserver" 
        Title="VSObserver" Height="350" Width="525"
        Style="{x:Null}">
    <Window.Resources>
        <CollectionViewSource x:Key="VariableCollectionViewSource" CollectionViewType="ListCollectionView"/>
        <nspace:ValueToBackgroundConverter x:Key="ValueToBackgroundConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Button Name="btn_hideDialog" Content="Hide" Height="20" Click="btn_hideDialog_Click" Grid.Column="1" Grid.Row="0"/>
        <TextBox Name="tb_variableName" Height="20" Grid.Column="0" Grid.Row="0" TextChanged="tb_variableName_TextChanged"/>
        <TextBlock HorizontalAlignment="Left" Name="tbl_varNumber" Text="TextBlock" VerticalAlignment="Top" Height="20" Width="248" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" />
        <DataGrid
            VerticalAlignment="Stretch"
            Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
            Name="dg_variableList"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            DataContext="{StaticResource VariableCollectionViewSource}"
            ItemsSource="{Binding}"
            AutoGenerateColumns="False"
            CanUserAddRows="False">

            <!--<DataGrid.RowStyle>
               <Style TargetType="DataGridRow" >
                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Item.ValueHasChanged, Converter={StaticResource ValueToBackgroundConverter}}" />
                </Style>
            </DataGrid.RowStyle>-->
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Path=Path}" Header="Path and Name"/>
                <DataGridTextColumn Binding="{Binding Path=Variable}" Header="Variable name"/>
                <DataGridTextColumn Binding="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" Header="Value">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ValueHasChanged}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="tt" >
                                            <Storyboard Storyboard.TargetProperty="(DataGridCell.Background).(SolidColorBrush.Color)">
                                                <ColorAnimation  RepeatBehavior="Forever"                                                                  
                                                     FillBehavior="Stop"                                                                  
                                                     From="LightBlue"                                                                  
                                                     To="Transparent"                                                                  
                                                     By="Blue"                                                                  
                                                     Duration="0:0:0.5" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                                <!--<DataTrigger Binding="{Binding Path=ValueHasChanged}" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                </DataTrigger>-->
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Timestamp, UpdateSourceTrigger=PropertyChanged}" Header="Timestamp"/>
                <DataGridTextColumn Binding="{Binding Path=ValueHasChanged, UpdateSourceTrigger=PropertyChanged}" Header="Change" Visibility="Collapsed"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
