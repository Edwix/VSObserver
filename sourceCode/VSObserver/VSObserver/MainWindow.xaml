<Window x:Class="VSObserver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:nspace="clr-namespace:VSObserver" 
        xmlns:converters="clr-namespace:VSObserver.Converters"  
        Title="VSObserver" Height="400" Width="550"
        SizeToContent="Manual"
        Background="{StaticResource WindowBackgroundColor}" Icon="/VSObserver;component/Images/VSO_logo.ico">
    <Window.Resources>
        <converters:BoolToVisibility x:Key="ConvBoolToVisibility" />
        <converters:StringToBackground x:Key="ConvStringToBackground" />
        <converters:StringToColor x:Key="ConvStringToColor" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>

        <!--=========================================================================================-->
        <!-- Search field -->
        <!--=========================================================================================-->
            <nspace:VSOTextBox x:Name="tb_variableName" AcceptsReturn="False" Margin="5,5,5,5" Height="24" Width="Auto" HorizontalAlignment="Stretch"
                               Grid.Column="0" Grid.Row="0"
                               Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}" TextChanged="tb_variableName_TextChanged"
                               NbElement="{Binding VarNumberFound, UpdateSourceTrigger=PropertyChanged}" 
                               SearchError="{Binding InformationMessage, UpdateSourceTrigger=PropertyChanged}"
                               IsEnabled="{Binding SearchTextEnabled}"/>
        <!--=========================================================================================-->

        <!--=========================================================================================-->
        <!-- Button to refresh the list of variables-->
        <!--=========================================================================================-->
            <Image Name="img_refresh" Source="Resources/Refresh.png" RenderTransformOrigin=".5,.5" Grid.Column="1" Grid.Row="0" MouseLeftButtonDown="refresh_ClickDown"
                    ToolTip="Refresh all variables" Margin="5,0,0,0" Width="25">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Image.RenderTransform">
                            <Setter.Value>
                                <RotateTransform CenterX="0" CenterY="0" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <!-- Quand on a la variable à FALSE alors le chargmenent n'est pas terminé
                            Le ExitAction indique que lorsqu'on à fini l'action (LoadDone = True) on arrête l'animation-->
                            <DataTrigger Binding="{Binding Path=LoadDone}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="RenderTransform.Angle"
                                                From="0"
                                                To="-360"
                                                Duration="0:0:1"
                                                RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                    Storyboard.TargetProperty="RenderTransform.Angle"
                                                    From="0"
                                                    To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        <!--=========================================================================================-->

        <!--=========================================================================================-->
        <!-- Button to change (writting or forcing) -->
        <!--=========================================================================================-->
            <Border Name="btn_typeW" BorderBrush="{StaticResource DarkBorderColor}" BorderThickness="1" CornerRadius="20" Margin="5,0,0,0"
                    Background="{Binding Path=WritingType, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ConvStringToBackground}}" 
                    Width="20" Height="20" Grid.Column="2" Grid.Row="0" MouseDown="btn_typeW_MouseDown">
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" 
                           Text="{Binding Path=WritingType, UpdateSourceTrigger=PropertyChanged}" Foreground="Black" FontWeight="ExtraBold" />
            </Border>
        <!--=========================================================================================-->

        <!--=========================================================================================-->
        <!-- Button to have a list of locked lists -->
        <!--=========================================================================================-->
            <Image  x:Name="img_lockedList" Grid.Column="3" Grid.Row="0" Source="Resources/List.png" SnapsToDevicePixels="True" Width="20"
                    Margin="5,0,0,0" MouseLeftButtonUp="img_lockedList_MouseLeftButtonUp">
            </Image>
            <Popup Name="pop_listLockedFiles" PlacementTarget="{Binding ElementName=img_lockedList}" PopupAnimation="Fade" Placement="Bottom" IsOpen="False" StaysOpen="False">
                <Border BorderBrush="{StaticResource DarkBorderColor}" BorderThickness="1">
                    <Menu Background="{StaticResource WindowBackgroundColor}">
                        <Menu.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </Menu.ItemsPanel>
                        <Menu.Resources>
                            <CollectionViewSource x:Name="listLockedVarFile" x:Key="LockedVarFiles" Source="{Binding Path=ListOfFileLockedVar, UpdateSourceTrigger=PropertyChanged}" />
                        </Menu.Resources>
                        <Menu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Name="fileLockedList" Header="{Binding}" Click="fileLockedList_Click" />
                            </DataTemplate>
                        </Menu.ItemTemplate>
                        <Menu.ItemsSource>
                            <CompositeCollection>
                                <MenuItem  Width="Auto" HorizontalAlignment="Stretch" Margin="0">
                                    <MenuItem.Header>
                                        <TextBox ToolTip="Press to Enter to save the list" Height="25" Width="Auto"
                                                         HorizontalAlignment="Stretch" AcceptsReturn="False" 
                                                         Text="{Binding Path=FileNameLockedList, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBox.InputBindings>
                                                <KeyBinding Key="Enter" Command="{Binding Path=SaveCurrentLockedList}" />
                                            </TextBox.InputBindings>
                                        </TextBox>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Name="defaultLockedList" Header="Default locked list" Click="defaultLockedList_Click" />
                                <MenuItem Name="showAllForcedVars" Header="Show all forced variables" Click="showAllForcedVars_Click" />
                                <Separator />
                                <CollectionContainer Collection="{Binding Source={StaticResource LockedVarFiles}}" />
                            </CompositeCollection>
                        </Menu.ItemsSource>
                    </Menu>
                </Border>
            </Popup>
        <!--=========================================================================================-->

        <!--=========================================================================================-->
        <!-- ToglleButton to start or stop the recording -->
        <!--=========================================================================================-->
            <ToggleButton x:Name="btnRecord" IsChecked="{Binding IsRecording}" Click="btnRecord_Click" Grid.Column="4" Grid.Row="0" Margin="5,0,0,0">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                    <Border BorderThickness="0">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
                <Image Width="20" Height="20">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRecording}" Value="true">
                                    <Setter Property="Source" Value="Images/control_stop.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsRecording}" Value="false">
                                    <Setter Property="Source" Value="Images/control_play.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>
            <!--Popup which displays a message when a trace is recording-->
            <Popup Name="pop_infoTrace" IsOpen="False" StaysOpen="False" Placement="Relative" AllowsTransparency="True"
                            PopupAnimation="Fade" PlacementTarget="{Binding ElementName=btnRecord}"
                   VerticalOffset="-10">
                <Border Background="#F7FF73" BorderBrush="{StaticResource DarkBorderColor}" BorderThickness="1" CornerRadius="3">
                    <TextBlock Margin="2" FontSize="10" FontWeight="Bold">Trace recorder is activated !</TextBlock>
                </Border>
            </Popup>
        
        <!--=========================================================================================-->

        <!--=========================================================================================-->
        <!-- Button to have the parameters -->
        <!--=========================================================================================-->
            <Image  x:Name="img_parameters" Grid.Column="5" Grid.Row="0" Source="Images/cog.png" SnapsToDevicePixels="True" Width="20"
                            Margin="5,0,5,0" MouseLeftButtonUp="img_parameters_MouseLeftButtonUp">
            </Image>
            <Popup Name="pop_parameters" PlacementTarget="{Binding ElementName=img_parameters}" PopupAnimation="Fade" Placement="Bottom" IsOpen="False" StaysOpen="False">
                <Border BorderBrush="{StaticResource DarkBorderColor}" BorderThickness="1">
                    <Menu Background="{StaticResource WindowBackgroundColor}">
                        <MenuItem Name="cb_VerifyClipBoard" IsCheckable="True" Header="Check clipboard" IsChecked="True"  />
                        <MenuItem Name="cb_RegexSearch" IsCheckable="True" Header="Search with regex" IsChecked="{Binding SearchRegex, UpdateSourceTrigger=PropertyChanged}"/>
                    </Menu>
                </Border>
            </Popup>
        <!--=========================================================================================-->

        <DataGrid HeadersVisibility="None"
                  VerticalAlignment="Stretch"
                  Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="6"
                  x:Name="dg_variableList"
                  Margin="0"
                  Width="Auto"
                  BorderBrush="Transparent"
                  AutoGenerateColumns="False"
                  GridLinesVisibility="None"
                  VerticalGridLinesBrush="{StaticResource BorderColor}"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ItemsSource="{Binding Path=VariableList, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding Path=SelectedVariable, UpdateSourceTrigger=PropertyChanged}"
                  CanUserAddRows="False"
                  ColumnWidth="SizeToCells"
                  CanUserResizeColumns="True"
                  CanUserSortColumns="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Action">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel x:Name="wp_action" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Width="Auto">
                                <ToggleButton Content="" Foreground="Black" IsChecked="{Binding Path=IsLocked, UpdateSourceTrigger=PropertyChanged}"
                                          HorizontalAlignment="Center" Click="lockBtn_Click">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image>
                                                    <Image.Style>
                                                        <Style>
                                                            <Setter Property="Image.Source" Value="Images/lock_open.png" />
                                                            <Setter Property="Image.Height" Value="20" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsChecked, 
                                                             RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                    <Setter Property="Image.Source" Value="Images/lock_closed.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <ContentPresenter Content="{TemplateBinding Content}" Margin="0,0,0,0" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <Separator Height="Auto" Width="1"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Path" CanUserResize="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <WrapPanel x:Name="wp_pathname" Width="Auto" HorizontalAlignment="Stretch" Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="{Binding Path=Path, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"  HorizontalAlignment="Left" Background="Transparent"/>
                                <TextBlock FontStyle="Italic" Text="{Binding Path=Mapping, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left" Background="Transparent"
                                           Margin="5,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Mapping, UpdateSourceTrigger=PropertyChanged}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </WrapPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <WrapPanel x:Name="wp_pathname" Width="Auto" HorizontalAlignment="Stretch" Orientation="Vertical" VerticalAlignment="Center">
                                <TextBox Text="{Binding Path=Path, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True}"  HorizontalAlignment="Left" Background="Transparent"
                                         IsReadOnly="True" BorderThickness="0" Foreground="White"/>
                                <TextBox FontStyle="Italic" Text="{Binding Path=Mapping, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Left" Background="Transparent"
                                         IsReadOnly="True" TextWrapping="Wrap" BorderThickness="0" Foreground="White">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=Mapping, UpdateSourceTrigger=PropertyChanged}" Value="">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </WrapPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Variable">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Margin="5,0,5,0" FontWeight="Bold" Text="{Binding Path=Variable, UpdateSourceTrigger=PropertyChanged}"
                                        Grid.Column="0" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox VerticalAlignment="Center" Margin="5,0,5,0" FontWeight="Bold" Text="{Binding Path=Variable, UpdateSourceTrigger=PropertyChanged}"
                                    IsReadOnly="True" TextWrapping="Wrap" Background="Transparent" BorderThickness="0" Foreground="White" Grid.Column="0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Value">
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" Margin="2,0,2,0" 
                                    GotMouseCapture="TextBox_GotMouseCapture" KeyDown="TextBox_KeyDown" Grid.Column="0"
                                    LostFocus="TextBox_LostFocus">
                                <TextBox.InputBindings>

                                </TextBox.InputBindings>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="5" Margin="2,0,2,0" Grid.Column="0"
                                    Background="{Binding Path=Color, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ConvStringToColor}}"
                                    ToolTip="{Binding Path=CommentColor, UpdateSourceTrigger=PropertyChanged}">
                                
                                    <TextBlock Text="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" 
                                            VerticalAlignment="Center" HorizontalAlignment="Center" Background="Transparent"
                                            FontWeight="Bold">                                    
                                    </TextBlock>
                                                                    
                                <!--Style to change the color of background border when the value has changed-->
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ValueHasChanged}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard x:Name="tt" >
                                                        <Storyboard Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                            <ColorAnimation                                                                  
                                                                        FillBehavior="Stop"                                                                  
                                                                        From="{StaticResource colorAnim_valueChanged}"                                                                  
                                                                        To="Transparent"                                                                  
                                                                        By="Blue"                                                                  
                                                                        Duration="{StaticResource durationColor}" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="WhenUpdated" MinWidth="50" Width="1*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25" />
                                    <ColumnDefinition  />
                                </Grid.ColumnDefinitions>
                                <Border Name="force_ball" Background="Red" Grid.Column="0"
                                            Visibility="{Binding Path=IsForced, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ConvBoolToVisibility}}" 
                                            Tag="{Binding Path=PathName, UpdateSourceTrigger=PropertyChanged}"
                                            MouseDown="force_ball_icon_MouseDown"
                                            BorderThickness="0" CornerRadius="20" Width="16" Height="16" Margin="5,0,0,0">
                                <TextBlock Name="tb_force_icon" Text="F" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" Foreground="White" 
                                                   FontWeight="Bold" Tag="{Binding Path=PathName, UpdateSourceTrigger=PropertyChanged}"
                                                   FontSize="10"/>
                            </Border>
                            <TextBlock VerticalAlignment="Center" Margin="5,0,5,0" TextAlignment="Center" Text="{Binding Path=WhenUpdated, UpdateSourceTrigger=PropertyChanged}"
                                       Grid.Column="1">

                            </TextBlock>

                        </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Name="sortByName" Header="Sort by name" Click="sortByName_Click"  />
                    <MenuItem Header="Copy the mapping value" Command="{Binding CopyMapping}"/>
                    <MenuItem Header="Edit the coloring rule" Command="{Binding EditColoringRule}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding CopyVariable}" Gesture="CTRL+C" />
            </DataGrid.InputBindings>
        </DataGrid>
    </Grid>
</Window>
