<Window x:Class="VSObserver.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:nspace="clr-namespace:VSObserver" 
        Title="VSObserver" Height="350" Width="525"
        >
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="35"/>
            <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <Button Name="btn_hideDialog" Content="Hide" Height="20" Click="btn_hideDialog_Click" Margin="5,5,5,5" Grid.Column="2" Grid.Row="0"/>
        <Image Name="img_refresh" Source="Resources/Refresh.png" RenderTransformOrigin=".5,.5" Grid.Column="1" Grid.Row="0" MouseLeftButtonDown="refresh_ClickDown"
                ToolTip="Refresh all variables" Margin="5,5,5,5">
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Image.RenderTransform">
                        <Setter.Value>
                            <RotateTransform CenterX="0" CenterY="0" />
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <!-- Quand on a la variable à FALSE alors le chargmenent n'est pas terminé
                        Le ExitAction indique que lorsqu'on à fini l'action (LoadDone = True) on arrête l'animation-->
                        <DataTrigger Binding="{Binding Path=LoadDone}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                            From="0"
                                            To="-360"
                                            Duration="0:0:1"
                                            RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetProperty="RenderTransform.Angle"
                                                From="0"
                                                To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <TextBox Name="tb_variableName" Margin="5,5,5,5" Height="25" Grid.Column="0" Grid.Row="0" Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Name="tbl_varNumber" VerticalAlignment="Top" Height="20" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" />
        <TextBlock Margin="5,0,0,0" HorizontalAlignment="Left" Name="tbl_message" Text="{Binding Path=InformationMessage, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Height="20" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=InformationMessage}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <DataGrid
            VerticalAlignment="Stretch"
            Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="3"
            Name="dg_variableList"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            ItemsSource="{Binding Path=VariableList, UpdateSourceTrigger=PropertyChanged}"
            AutoGenerateColumns="False"
            CanUserAddRows="False">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding Path=IsLocked}" Header="Locking"/>
                <DataGridTextColumn Binding="{Binding Path=Path}" Header="Path and Name"/>
                <DataGridTextColumn Binding="{Binding Path=Variable}" Header="Variable name"/>
                <DataGridTextColumn Binding="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}" Header="Value">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ValueHasChanged}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard x:Name="tt" >
                                            <Storyboard Storyboard.TargetProperty="(DataGridCell.Background).(SolidColorBrush.Color)">
                                                <ColorAnimation                                                                  
                                                     FillBehavior="Stop"                                                                  
                                                     From="{StaticResource colorAnim_valueChanged}"                                                                  
                                                     To="Transparent"                                                                  
                                                     By="Blue"                                                                  
                                                     Duration="{StaticResource durationColor}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" >
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Path=Timestamp, UpdateSourceTrigger=PropertyChanged}" Header="Timestamp"/>
                <DataGridTextColumn Binding="{Binding Path=ValueHasChanged, UpdateSourceTrigger=PropertyChanged}" Header="Change" Visibility="Collapsed"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
