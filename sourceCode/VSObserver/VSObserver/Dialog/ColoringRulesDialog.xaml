<Window x:Class="VSObserver.Dialog.ColoringRulesDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:nspace="clr-namespace:VSObserver"
        xmlns:converters="clr-namespace:VSObserver.Converters"
        Title="ColoringRulesDialog" Height="400" Width="400"
        Background="{StaticResource WindowBackgroundColor}">
    <Window.Resources>
        <converters:StringToColor x:Key="ConvStringToColor" />
    </Window.Resources>
    <StackPanel Orientation="Vertical" Margin="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label Content="Regex :" Grid.Column="0" />
            <nspace:VSOTextBox Grid.Column="1" ShowNumberResult="False" AcceptsReturn="False" Text="{Binding RuleRegex, UpdateSourceTrigger=PropertyChanged}"
                               SearchError="{Binding RegexError, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Grid Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Label Content="Comment :" Grid.Column="0" />
            <TextBox AcceptsReturn="False" AcceptsTab="False" Grid.Column="1" Text="{Binding RuleComment, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Button Content="Add coloring rule" Command="{Binding AddColoringRule}" Margin="0,5,0,0"/>
        <TextBlock Text="The selected color correspond to the first values is matching " Foreground="Red" Margin="0,5,0,0" FontWeight="Bold" />
        <ItemsControl Margin="0,5,0,0" ItemsSource="{Binding ListOfColoringRules}"
                      Height="Auto" VerticalAlignment="Stretch">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Stretch" Width="Auto" 
                                Height="Auto" VerticalAlignment="Stretch" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="{StaticResource DarkBorderColor}" Background="Transparent" BorderThickness="1"
                            CornerRadius="5" Margin="0,0,0,5" Padding="5">
                        <DockPanel LastChildFill="True">
                            <Label Content="Element : "  DockPanel.Dock="Left"/>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                <ComboBox  IsEditable="False" Width="Auto" Margin="5,0,0,0"
                                           SelectedValuePath="Tag" SelectedValue="{Binding Operator, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="=" ToolTip="Equal" Tag="eq"/>
                                    <ComboBoxItem Content="&lt;" ToolTip="Lower than" Tag="lt" />
                                    <ComboBoxItem Content="&gt;" ToolTip="Greater than" Tag="gt" />
                                    <ComboBoxItem Content="&lt;=" ToolTip="Lower or equal" Tag="le" />
                                    <ComboBoxItem Content="&gt;=" ToolTip="Greater or equal" Tag="ge" />
                                </ComboBox>
                                <ComboBox IsEditable="False" Width="60"
                                          SelectedValue="{Binding Color, UpdateSourceTrigger=PropertyChanged}"
                                          Background="{Binding Color, Converter={StaticResource ConvStringToColor}}" SelectedValuePath="Background"
                                          Margin="5,0,0,0">
                                    <ComboBoxItem Content="" ToolTip="Aqua" Background="Aqua" />
                                    <ComboBoxItem Content="" ToolTip="Blue" Background="Blue" />
                                    <ComboBoxItem Content="" ToolTip="Chocolate" Background="Chocolate" />
                                    <ComboBoxItem Content="" ToolTip="Crimson" Background="Crimson" />
                                    <ComboBoxItem Content="" ToolTip="DarkOrchid" Background="DarkOrchid" />
                                    <ComboBoxItem Content="" ToolTip="DarkRed" Background="DarkRed" />
                                    <ComboBoxItem Content="" ToolTip="DodgerBlue" Background="DodgerBlue" />
                                    <ComboBoxItem Content="" ToolTip="Gold" Background="Gold" />
                                    <ComboBoxItem Content="" ToolTip="Green" Background="#CECECE" />
                                    <ComboBoxItem Content="" ToolTip="Gray" Background="Gray" />
                                    <ComboBoxItem Content="" ToolTip="HotPink" Background="HotPink" />
                                    <ComboBoxItem Content="" ToolTip="LimeGreen" Background="LimeGreen" />
                                    <ComboBoxItem Content="" ToolTip="Orange" Background="Orange" />
                                    <ComboBoxItem Content="" ToolTip="Purple" Background="Purple" />
                                    <ComboBoxItem Content="" ToolTip="Red" Background="Red" />
                                    <ComboBoxItem Content="" ToolTip="Yellow" Background="Yellow" />
                                </ComboBox>
                                <!-- Binding Path=. means there is a bind on itself (ColoringRule). 
                                     Binding Path=. signifie qu'il y a un lien sur lui même donc le tag aura un objet ColoringRule  -->
                                <Button Tag="{Binding Path=.}" Name="btnDelete" Click="btnDelete_Click" Background="Transparent" VerticalAlignment="Center"
                                        BorderBrush="Transparent" BorderThickness="0" Margin="5,0,0,0">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border BorderThickness="0">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Image Source="../Images/delete.png" Width="16" Height="16" />
                                </Button>
                            </StackPanel>
                            <TextBox Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" AcceptsReturn="False"
                                     AcceptsTab="False" />
                        </DockPanel>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Grid Margin="0,5,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Name="btnSave" Content="Save" Width="50" Command="{Binding SaveRules}" Grid.Column="0" Click="btnSave_Click"/>
            <Button Name="btnCancel" Width="50" Content="Cancel" Click="btnCancel_Click" 
                    Grid.Column="1"/>
        </Grid>
    </StackPanel>
</Window>